ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"I2C_1_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.I2C_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	I2C_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	I2C_1_ISR, %function
  24              	I2C_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\I2C_1_INT.c"
   1:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/I2C_1_INT.c **** * File Name: I2C_1_INT.c
   3:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
   5:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  for the I2C component.
   8:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
   9:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
  10:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation. All rights reserved.
  11:.\Generated_Source\PSoC5/I2C_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/I2C_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/I2C_1_INT.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  16:.\Generated_Source\PSoC5/I2C_1_INT.c **** #include "I2C_1_PVT.h"
  17:.\Generated_Source\PSoC5/I2C_1_INT.c **** #include "cyapicallbacks.h"
  18:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  19:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  20:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  21:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  Place your includes, defines and code here.
  22:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/I2C_1_INT.c **** /* `#START I2C_1_ISR_intc` */
  24:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  25:.\Generated_Source\PSoC5/I2C_1_INT.c **** /* `#END` */
  26:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  27:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  28:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  29:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Function Name: I2C_1_ISR
  30:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
  31:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 2


  32:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Summary:
  33:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  The handler for the I2C interrupt. The slave and master operations are
  34:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  handled here.
  35:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  36:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  38:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  39:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  41:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  42:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  No.
  44:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  45:.\Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/I2C_1_INT.c **** CY_ISR(I2C_1_ISR)
  47:.\Generated_Source\PSoC5/I2C_1_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  48:.\Generated_Source\PSoC5/I2C_1_INT.c **** #if (I2C_1_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/I2C_1_INT.c ****    uint8  tmp8;
  50:.\Generated_Source\PSoC5/I2C_1_INT.c **** #endif  /* (I2C_1_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  52:.\Generated_Source\PSoC5/I2C_1_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/I2C_1_INT.c ****     
  54:.\Generated_Source\PSoC5/I2C_1_INT.c **** #ifdef I2C_1_ISR_ENTRY_CALLBACK
  55:.\Generated_Source\PSoC5/I2C_1_INT.c ****     I2C_1_ISR_EntryCallback();
  56:.\Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* I2C_1_ISR_ENTRY_CALLBACK */
  57:.\Generated_Source\PSoC5/I2C_1_INT.c ****     
  58:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  59:.\Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_TIMEOUT_FF_ENABLED)
  60:.\Generated_Source\PSoC5/I2C_1_INT.c ****     if(0u != I2C_1_TimeoutGetStatus())
  61:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
  62:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_TimeoutReset();
  63:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_EXIT_IDLE;
  64:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* I2C_1_CSR_REG should be cleared after reset */
  65:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
  66:.\Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_TIMEOUT_FF_ENABLED) */
  67:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  68:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  69:.\Generated_Source\PSoC5/I2C_1_INT.c ****     tmpCsr = I2C_1_CSR_REG;      /* Make copy as interrupts clear */
  35              		.loc 1 69 0
  36 0002 714B     		ldr	r3, .L16
  37 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38 0006 DAB2     		uxtb	r2, r3
  39              	.LVL0:
  70:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  71:.\Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  72:.\Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_START_GEN(I2C_1_MCSR_REG))
  73:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
  74:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_CLEAR_START_GEN;
  75:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 3


  76:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set transfer complete and error flags */
  77:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
  78:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
  79:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  80:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* Slave was addressed */
  81:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_SLAVE;
  82:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
  83:.\Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  84:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  85:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  86:.\Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_ENABLED)
  87:.\Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_LOST_ARB(tmpCsr))
  88:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
  89:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set errors */
  90:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER     |
  91:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_MSTAT_ERR_ARB_LOST |
  92:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
  93:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  94:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  95:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  96:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  97:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  98:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
  99:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Slave was addressed */
 100:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_SLAVE;
 101:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 102:.\Generated_Source\PSoC5/I2C_1_INT.c ****             else
 103:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 104:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 106:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 108:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #else
 109:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_BUS_RELEASE;
 110:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 111:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_EXIT_IDLE;
 112:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 113:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 114:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
 115:.\Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_ENABLED) */
 116:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 117:.\Generated_Source\PSoC5/I2C_1_INT.c ****     /* Check for master operation mode */
 118:.\Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_SM_MASTER)
  40              		.loc 1 118 0
  41 0008 704B     		ldr	r3, .L16+4
  42 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43 000c 13F0400F 		tst	r3, #64
  44 0010 40F0D880 		bne	.L1
 119:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 120:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_MASTER_ENABLED)
 121:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
 122:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****             switch (I2C_1_state)
 124:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 125:.\Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_ADDR:  /* After address is sent, write data */
 126:.\Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_ADDR:  /* After address is sent, read data */
 127:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 4


 128:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear Stop bit history on address ph
 129:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 130:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_ADDR_ACK(tmpCsr))
 131:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 132:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Setup for transmit or receive of data */
 133:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_state == I2C_1_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
 134:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 135:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Check if at least one byte to transfer */
 136:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_mstrWrBufSize > 0u)
 137:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 138:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load the 1st data byte */
 139:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_mstrWrBufPtr[0u];
 140:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
 141:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 142:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 143:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set transmit state until done */
 144:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_WR_DATA;
 145:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 146:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* End of buffer: complete writing */
 147:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 148:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 149:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set write complete and master halted */
 150:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 151:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                             I2C_1_MSTAT_WR_CMPLT);
 152:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 153:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect ReStart */
 154:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 155:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 156:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else
 157:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 158:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 159:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_GENERATE_STOP;
 160:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 161:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 162:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Master receive data */
 163:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 164:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_READY_TO_READ; /* Release bus to read data */
 165:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 166:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state  = I2C_1_SM_MSTR_RD_DATA;
 167:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 168:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 169:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Address is NACKed */
 170:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_ADDR_NAK(tmpCsr))
 171:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 172:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set Address NAK error */
 173:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
 174:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_ADDR_NAK);
 175:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 176:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 177:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 178:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 179:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_GET_MSTAT_CMPLT);
 180:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 181:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect RESTART */
 182:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 183:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 184:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 5


 185:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 186:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 187:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 188:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 189:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 190:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 191:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 192:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Address phase is not set for some reason: error */
 193:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_TIMEOUT_ENABLED)
 194:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Exit interrupt to take chance for timeout timer to handle this case */
 195:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 196:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ClearPendingInt();
 197:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #else
 198:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Block execution flow: unexpected condition */
 199:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         CYASSERT(0u != 0u);
 200:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_TIMEOUT_ENABLED) */
 201:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 202:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 203:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 204:.\Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_DATA:
 205:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 206:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 207:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 208:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Check if end of buffer */
 209:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_mstrWrBufIndex  < I2C_1_mstrWrBufSize)
 210:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 211:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG =
 212:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                  I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 213:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 214:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrWrBufIndex++;
 215:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 216:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* End of buffer: complete writing */
 217:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 218:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 219:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set write complete and master halted */
 220:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 221:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_WR_CMPLT);
 222:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 223:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect restart */
 224:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 225:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 226:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
 227:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 228:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 229:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 230:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 231:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 232:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Last byte NAKed: end writing */
 233:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 234:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 235:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set write complete, short transfer and master halted */
 236:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER       |
 237:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_SHORT_XFER |
 238:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_XFER_HALT      |
 239:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_WR_CMPLT);
 240:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 241:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 6


 242:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 243:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 244:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Do normal Stop */
 245:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 246:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 247:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_GENERATE_STOP;
 248:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 249:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set short transfer and error flag */
 250:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_SHORT_XFER |
 251:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_XFER);
 252:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 253:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 254:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 255:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 256:.\Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_DATA:
 257:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 258:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufPtr[I2C_1_mstrRdBufIndex] = I2C_1_DATA_REG;
 259:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufIndex++;
 260:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 261:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Check if end of buffer */
 262:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_mstrRdBufIndex < I2C_1_mstrRdBufSize)
 263:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 264:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;       /* ACK and receive byte */
 265:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 266:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* End of buffer: complete reading */
 267:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 268:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 269:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set read complete and master halted */
 270:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 271:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_RD_CMPLT);
 272:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 273:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
 274:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 275:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 276:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 277:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 278:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 279:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;       /* NACK and TRY to generate Stop */
 280:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 281:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 282:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 283:.\Generated_Source\PSoC5/I2C_1_INT.c ****             default: /* This is an invalid state and should not occur */
 284:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 285:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 286:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handles this case */
 287:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 288:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 289:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 290:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 291:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 292:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 293:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 294:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 295:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 296:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
 297:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 298:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* Catches Stop: end of transaction */
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 7


 299:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_STOP_STS(tmpCsr))
 300:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
 301:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_mstrStatus |= I2C_1_GET_MSTAT_CMPLT;
 302:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 303:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_DISABLE_INT_ON_STOP;
 304:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_IDLE;
 305:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
 306:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_MASTER_ENABLED) */
 307:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
 308:.\Generated_Source\PSoC5/I2C_1_INT.c ****     else if(I2C_1_CHECK_SM_SLAVE)
  45              		.loc 1 308 0
  46 0014 6D4B     		ldr	r3, .L16+4
  47 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  48 0018 13F0100F 		tst	r3, #16
  49 001c 00F0CF80 		beq	.L3
 309:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 310:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_SLAVE_ENABLED)
 311:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 312:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if((I2C_1_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
  50              		.loc 1 312 0
  51 0020 12F0200F 		tst	r2, #32
  52 0024 03D1     		bne	.L4
 313:.\Generated_Source\PSoC5/I2C_1_INT.c ****            (I2C_1_CHECK_BYTE_COMPLETE(tmpCsr) && I2C_1_CHECK_ADDRESS_STS(tmpCsr)))
  53              		.loc 1 313 0 discriminator 1
  54 0026 02F00903 		and	r3, r2, #9
 312:.\Generated_Source\PSoC5/I2C_1_INT.c ****            (I2C_1_CHECK_BYTE_COMPLETE(tmpCsr) && I2C_1_CHECK_ADDRESS_STS(tmpCsr)))
  55              		.loc 1 312 0 discriminator 1
  56 002a 092B     		cmp	r3, #9
  57 002c 15D1     		bne	.L5
  58              	.L4:
 314:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
 315:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Catch end of master write transaction: use interrupt on Stop */
 316:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* The Stop bit history on address phase does not have correct state */
 317:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_SM_SL_WR_DATA == I2C_1_state)
  59              		.loc 1 317 0
  60 002e 674B     		ldr	r3, .L16+4
  61 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 0032 DBB2     		uxtb	r3, r3
  63 0034 112B     		cmp	r3, #17
  64 0036 10D1     		bne	.L5
 318:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 319:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DISABLE_INT_ON_STOP;
  65              		.loc 1 319 0
  66 0038 6549     		ldr	r1, .L16+8
  67 003a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  68 003c 03F0EF03 		and	r3, r3, #239
  69 0040 0B70     		strb	r3, [r1]
 320:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 321:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_WR_BUSY);
  70              		.loc 1 321 0
  71 0042 644B     		ldr	r3, .L16+12
  72 0044 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  73 0046 01F0DF01 		and	r1, r1, #223
  74 004a 1970     		strb	r1, [r3]
 322:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_WR_CMPLT);
  75              		.loc 1 322 0
  76 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 8


  77 004e 41F01001 		orr	r1, r1, #16
  78 0052 1970     		strb	r1, [r3]
 323:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 324:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_IDLE;
  79              		.loc 1 324 0
  80 0054 1021     		movs	r1, #16
  81 0056 5D4B     		ldr	r3, .L16+4
  82 0058 1970     		strb	r1, [r3]
  83              	.L5:
 325:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 326:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
 327:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 328:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
  84              		.loc 1 328 0
  85 005a 12F0010F 		tst	r2, #1
  86 005e 00F0B180 		beq	.L1
 329:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
 330:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* The address only issued after Start or ReStart: so check the address
 331:.\Generated_Source\PSoC5/I2C_1_INT.c ****                to catch these events:
 332:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 FF : sets an address phase with a byte_complete interrupt trigger.
 333:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 UDB: sets an address phase immediately after Start or ReStart. */
 334:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  87              		.loc 1 334 0
  88 0062 12F0080F 		tst	r2, #8
  89 0066 41D0     		beq	.L6
 335:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 336:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Check for software address detection */
 337:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_SW_ADRR_DECODE)
 338:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 tmp8 = I2C_1_GET_SLAVE_ADDR(I2C_1_DATA_REG);
 339:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 340:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(tmp8 == I2C_1_slAddress)   /* Check for address match */
 341:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 342:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 343:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 344:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Place code to prepare read buffer here                  */
 345:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#START I2C_1_SW_PREPARE_READ_BUF_interrupt` */
 346:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 347:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#END` */
 348:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 349:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #ifdef I2C_1_SW_PREPARE_READ_BUF_CALLBACK
 350:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_SwPrepareReadBuf_Callback();
 351:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* I2C_1_SW_PREPARE_READ_BUF_CALLBACK */
 352:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         
 353:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Prepare next operation to read, get data and place in data register */
 354:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 355:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 356:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 358:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
 359:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slRdBufIndex++;
 360:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 361:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 363:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else    /* Overflow: provide 0xFF on bus */
 364:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 365:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 9


 367:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 368:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                            I2C_1_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 371:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 372:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 374:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 376:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 379:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 382:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 383:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 384:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 385:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 388:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 389:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 390:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK
 391:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_EntryCallback();
 392:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK */
 393:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     
 394:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;   /* NACK address */
 395:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 396:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to end of condition for NACK generation here */
 397:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptEnd`  */
 398:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 399:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 400:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 401:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK
 402:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_ExitCallback();
 403:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK */
 404:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 405:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 406:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #else /* (I2C_1_HW_ADRR_DECODE) */
 407:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 408:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
  90              		.loc 1 408 0
  91 0068 5B4B     		ldr	r3, .L16+16
  92 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 006c 13F0010F 		tst	r3, #1
  94 0070 2BD0     		beq	.L7
 409:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 410:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to prepare read buffer here                  */
 411:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_HW_PREPARE_READ_BUF_interrupt` */
 412:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 413:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 414:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     
 415:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_HW_PREPARE_READ_BUF_CALLBACK
 416:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_HwPrepareReadBuf_Callback();
 417:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_HW_PREPARE_READ_BUF_CALLBACK */
 418:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 10


 419:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Prepare next operation to read, get data and place in data register */
 420:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
  95              		.loc 1 420 0
  96 0072 5A4B     		ldr	r3, .L16+20
  97 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 0076 5A4A     		ldr	r2, .L16+24
  99              	.LVL1:
 100 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 101 007a DBB2     		uxtb	r3, r3
 102 007c 9342     		cmp	r3, r2
 103 007e 15D2     		bcs	.L8
 421:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 422:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Load first data byte from array */
 423:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 104              		.loc 1 423 0
 105 0080 564A     		ldr	r2, .L16+20
 106 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 107 0084 DBB2     		uxtb	r3, r3
 108 0086 5749     		ldr	r1, .L16+28
 109 0088 0968     		ldr	r1, [r1]
 110 008a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 111 008c DBB2     		uxtb	r3, r3
 112 008e 5249     		ldr	r1, .L16+16
 113 0090 0B70     		strb	r3, [r1]
 424:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 114              		.loc 1 424 0
 115 0092 1421     		movs	r1, #20
 116 0094 4C4B     		ldr	r3, .L16
 117 0096 1970     		strb	r1, [r3]
 425:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 118              		.loc 1 425 0
 119 0098 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 120 009a 0133     		adds	r3, r3, #1
 121 009c DBB2     		uxtb	r3, r3
 122 009e 1370     		strb	r3, [r2]
 426:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 427:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 123              		.loc 1 427 0
 124 00a0 4C4A     		ldr	r2, .L16+12
 125 00a2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 126 00a4 43F00203 		orr	r3, r3, #2
 127 00a8 1370     		strb	r3, [r2]
 128 00aa 0AE0     		b	.L9
 129              	.L8:
 428:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 429:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else    /* Overflow: provide 0xFF on bus */
 430:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 431:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 130              		.loc 1 431 0
 131 00ac FF22     		movs	r2, #255
 132 00ae 4A4B     		ldr	r3, .L16+16
 133 00b0 1A70     		strb	r2, [r3]
 432:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 134              		.loc 1 432 0
 135 00b2 1422     		movs	r2, #20
 136 00b4 013B     		subs	r3, r3, #1
 137 00b6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 11


 433:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 434:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 138              		.loc 1 434 0
 139 00b8 464A     		ldr	r2, .L16+12
 140 00ba 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 00bc 43F00603 		orr	r3, r3, #6
 142 00c0 1370     		strb	r3, [r2]
 143              	.L9:
 435:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                        I2C_1_SSTAT_RD_ERR_OVFL);
 436:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 437:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 438:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_RD_DATA;
 144              		.loc 1 438 0
 145 00c2 1222     		movs	r2, #18
 146 00c4 414B     		ldr	r3, .L16+4
 147 00c6 1A70     		strb	r2, [r3]
 148 00c8 08BD     		pop	{r3, pc}
 149              	.LVL2:
 150              	.L7:
 439:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 440:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Write transaction: receive 1st byte */
 441:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 442:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 151              		.loc 1 442 0
 152 00ca 1022     		movs	r2, #16
 153              	.LVL3:
 154 00cc 3E4B     		ldr	r3, .L16
 155 00ce 1A70     		strb	r2, [r3]
 443:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_WR_DATA;
 156              		.loc 1 443 0
 157 00d0 1122     		movs	r2, #17
 158 00d2 3E4B     		ldr	r3, .L16+4
 159 00d4 1A70     		strb	r2, [r3]
 444:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 445:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 160              		.loc 1 445 0
 161 00d6 3F4A     		ldr	r2, .L16+12
 162 00d8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163 00da 43F02003 		orr	r3, r3, #32
 164 00de 1370     		strb	r3, [r2]
 446:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 165              		.loc 1 446 0
 166 00e0 3B4A     		ldr	r2, .L16+8
 167 00e2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 168 00e4 43F01003 		orr	r3, r3, #16
 169 00e8 1370     		strb	r3, [r2]
 170 00ea 08BD     		pop	{r3, pc}
 171              	.LVL4:
 172              	.L6:
 447:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 448:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 449:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_SW_ADRR_DECODE) */
 450:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 451:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data states */
 452:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master writes into slave */
 453:.\Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_WR_DATA)
 173              		.loc 1 453 0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 12


 174 00ec 374B     		ldr	r3, .L16+4
 175 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176 00f0 DBB2     		uxtb	r3, r3
 177 00f2 112B     		cmp	r3, #17
 178 00f4 20D1     		bne	.L10
 454:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 455:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_slWrBufIndex < I2C_1_slWrBufSize)
 179              		.loc 1 455 0
 180 00f6 3C4B     		ldr	r3, .L16+32
 181 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 182 00fa 3C4A     		ldr	r2, .L16+36
 183              	.LVL5:
 184 00fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 185 00fe DBB2     		uxtb	r3, r3
 186 0100 9342     		cmp	r3, r2
 187 0102 10D2     		bcs	.L11
 456:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 457:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmp8 = I2C_1_DATA_REG;
 188              		.loc 1 457 0
 189 0104 344B     		ldr	r3, .L16+16
 190 0106 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 191 0108 C9B2     		uxtb	r1, r1
 192              	.LVL6:
 458:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 193              		.loc 1 458 0
 194 010a 1022     		movs	r2, #16
 195 010c 013B     		subs	r3, r3, #1
 196 010e 1A70     		strb	r2, [r3]
 459:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufPtr[I2C_1_slWrBufIndex] = tmp8;
 197              		.loc 1 459 0
 198 0110 354A     		ldr	r2, .L16+32
 199 0112 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 0114 DBB2     		uxtb	r3, r3
 201 0116 3648     		ldr	r0, .L16+40
 202 0118 0068     		ldr	r0, [r0]
 203 011a C154     		strb	r1, [r0, r3]
 460:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufIndex++;
 204              		.loc 1 460 0
 205 011c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 206 011e 0133     		adds	r3, r3, #1
 207 0120 DBB2     		uxtb	r3, r3
 208 0122 1370     		strb	r3, [r2]
 209 0124 08BD     		pop	{r3, pc}
 210              	.LVL7:
 211              	.L11:
 461:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 462:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* of array: complete write, send NACK */
 463:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 464:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;
 212              		.loc 1 464 0
 213 0126 0022     		movs	r2, #0
 214 0128 274B     		ldr	r3, .L16
 215 012a 1A70     		strb	r2, [r3]
 465:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 466:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_ERR_OVFL;
 216              		.loc 1 466 0
 217 012c 294A     		ldr	r2, .L16+12
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 13


 218 012e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 219 0130 43F04003 		orr	r3, r3, #64
 220 0134 1370     		strb	r3, [r2]
 221 0136 08BD     		pop	{r3, pc}
 222              	.LVL8:
 223              	.L10:
 467:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 468:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 469:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master reads from slave */
 470:.\Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_RD_DATA)
 224              		.loc 1 470 0
 225 0138 244B     		ldr	r3, .L16+4
 226 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 227 013c DBB2     		uxtb	r3, r3
 228 013e 122B     		cmp	r3, #18
 229 0140 39D1     		bne	.L12
 471:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 472:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 230              		.loc 1 472 0
 231 0142 12F0020F 		tst	r2, #2
 232 0146 23D1     		bne	.L13
 473:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 474:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 233              		.loc 1 474 0
 234 0148 244B     		ldr	r3, .L16+20
 235 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 014c 244A     		ldr	r2, .L16+24
 237              	.LVL9:
 238 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 239 0150 DBB2     		uxtb	r3, r3
 240 0152 9342     		cmp	r3, r2
 241 0154 10D2     		bcs	.L14
 475:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 476:.\Generated_Source\PSoC5/I2C_1_INT.c ****                          /* Get data from array */
 477:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 242              		.loc 1 477 0
 243 0156 214A     		ldr	r2, .L16+20
 244 0158 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 245 015a DBB2     		uxtb	r3, r3
 246 015c 2149     		ldr	r1, .L16+28
 247 015e 0968     		ldr	r1, [r1]
 248 0160 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 249 0162 DBB2     		uxtb	r3, r3
 250 0164 1C49     		ldr	r1, .L16+16
 251 0166 0B70     		strb	r3, [r1]
 478:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 252              		.loc 1 478 0
 253 0168 0421     		movs	r1, #4
 254 016a 174B     		ldr	r3, .L16
 255 016c 1970     		strb	r1, [r3]
 479:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 256              		.loc 1 479 0
 257 016e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 258 0170 0133     		adds	r3, r3, #1
 259 0172 DBB2     		uxtb	r3, r3
 260 0174 1370     		strb	r3, [r2]
 261 0176 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 14


 262              	.L14:
 480:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 481:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else   /* Overflow: provide 0xFF on bus */
 482:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 483:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 263              		.loc 1 483 0
 264 0178 FF22     		movs	r2, #255
 265 017a 174B     		ldr	r3, .L16+16
 266 017c 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 267              		.loc 1 484 0
 268 017e 0422     		movs	r2, #4
 269 0180 013B     		subs	r3, r3, #1
 270 0182 1A70     		strb	r2, [r3]
 485:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 486:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_ERR_OVFL;
 271              		.loc 1 486 0
 272 0184 134A     		ldr	r2, .L16+12
 273 0186 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 274 0188 43F00403 		orr	r3, r3, #4
 275 018c 1370     		strb	r3, [r2]
 276 018e 08BD     		pop	{r3, pc}
 277              	.LVL10:
 278              	.L13:
 487:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 488:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 489:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Last byte was NACKed: read complete */
 490:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 491:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Only NACK appears on bus */
 492:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 279              		.loc 1 492 0
 280 0190 FF22     		movs	r2, #255
 281              	.LVL11:
 282 0192 114B     		ldr	r3, .L16+16
 283 0194 1A70     		strb	r2, [r3]
 493:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_TRANSMIT;
 284              		.loc 1 493 0
 285 0196 0022     		movs	r2, #0
 286 0198 013B     		subs	r3, r3, #1
 287 019a 1A70     		strb	r2, [r3]
 494:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 495:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_RD_BUSY);
 288              		.loc 1 495 0
 289 019c 0D4B     		ldr	r3, .L16+12
 290 019e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 291 01a0 02F0FD02 		and	r2, r2, #253
 292 01a4 1A70     		strb	r2, [r3]
 496:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_RD_CMPLT);
 293              		.loc 1 496 0
 294 01a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 295 01a8 42F00102 		orr	r2, r2, #1
 296 01ac 1A70     		strb	r2, [r3]
 497:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 498:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_IDLE;
 297              		.loc 1 498 0
 298 01ae 1022     		movs	r2, #16
 299 01b0 064B     		ldr	r3, .L16+4
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 15


 300 01b2 1A70     		strb	r2, [r3]
 301 01b4 08BD     		pop	{r3, pc}
 302              	.LVL12:
 303              	.L12:
 499:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 500:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 501:.\Generated_Source\PSoC5/I2C_1_INT.c ****             else
 502:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 503:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 504:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handle this case */
 505:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 506:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 507:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 508:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 509:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 304              		.loc 1 509 0 discriminator 1
 305 01b6 0020     		movs	r0, #0
 306 01b8 FFF7FEFF 		bl	CyHalt
 307              	.LVL13:
 308 01bc 08BD     		pop	{r3, pc}
 309              	.LVL14:
 310              	.L3:
 510:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 511:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 512:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
 513:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_SLAVE_ENABLED) */
 514:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
 515:.\Generated_Source\PSoC5/I2C_1_INT.c ****     else
 516:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 517:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 518:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_IDLE;
 311              		.loc 1 518 0
 312 01be 1022     		movs	r2, #16
 313              	.LVL15:
 314 01c0 024B     		ldr	r3, .L16+4
 315 01c2 1A70     		strb	r2, [r3]
 316              	.L1:
 317 01c4 08BD     		pop	{r3, pc}
 318              	.L17:
 319 01c6 00BF     		.align	2
 320              	.L16:
 321 01c8 D7490040 		.word	1073760727
 322 01cc 00000000 		.word	I2C_1_state
 323 01d0 D6490040 		.word	1073760726
 324 01d4 00000000 		.word	I2C_1_slStatus
 325 01d8 D8490040 		.word	1073760728
 326 01dc 00000000 		.word	I2C_1_slRdBufIndex
 327 01e0 00000000 		.word	I2C_1_slRdBufSize
 328 01e4 00000000 		.word	I2C_1_slRdBufPtr
 329 01e8 00000000 		.word	I2C_1_slWrBufIndex
 330 01ec 00000000 		.word	I2C_1_slWrBufSize
 331 01f0 00000000 		.word	I2C_1_slWrBufPtr
 332              		.cfi_endproc
 333              	.LFE0:
 334              		.size	I2C_1_ISR, .-I2C_1_ISR
 335              		.text
 336              	.Letext0:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 16


 337              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 338              		.file 3 ".\\Generated_Source\\PSoC5\\I2C_1_PVT.h"
 339              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 340              		.section	.debug_info,"",%progbits
 341              	.Ldebug_info0:
 342 0000 4E010000 		.4byte	0x14e
 343 0004 0400     		.2byte	0x4
 344 0006 00000000 		.4byte	.Ldebug_abbrev0
 345 000a 04       		.byte	0x4
 346 000b 01       		.uleb128 0x1
 347 000c 7E010000 		.4byte	.LASF25
 348 0010 01       		.byte	0x1
 349 0011 0C010000 		.4byte	.LASF26
 350 0015 07000000 		.4byte	.LASF27
 351 0019 00000000 		.4byte	.Ldebug_ranges0+0
 352 001d 00000000 		.4byte	0
 353 0021 00000000 		.4byte	.Ldebug_line0
 354 0025 02       		.uleb128 0x2
 355 0026 01       		.byte	0x1
 356 0027 06       		.byte	0x6
 357 0028 4C020000 		.4byte	.LASF0
 358 002c 02       		.uleb128 0x2
 359 002d 01       		.byte	0x1
 360 002e 08       		.byte	0x8
 361 002f B7000000 		.4byte	.LASF1
 362 0033 02       		.uleb128 0x2
 363 0034 02       		.byte	0x2
 364 0035 05       		.byte	0x5
 365 0036 2F020000 		.4byte	.LASF2
 366 003a 02       		.uleb128 0x2
 367 003b 02       		.byte	0x2
 368 003c 07       		.byte	0x7
 369 003d 88000000 		.4byte	.LASF3
 370 0041 02       		.uleb128 0x2
 371 0042 04       		.byte	0x4
 372 0043 05       		.byte	0x5
 373 0044 7F000000 		.4byte	.LASF4
 374 0048 02       		.uleb128 0x2
 375 0049 04       		.byte	0x4
 376 004a 07       		.byte	0x7
 377 004b CA000000 		.4byte	.LASF5
 378 004f 02       		.uleb128 0x2
 379 0050 08       		.byte	0x8
 380 0051 05       		.byte	0x5
 381 0052 1C020000 		.4byte	.LASF6
 382 0056 02       		.uleb128 0x2
 383 0057 08       		.byte	0x8
 384 0058 07       		.byte	0x7
 385 0059 67010000 		.4byte	.LASF7
 386 005d 03       		.uleb128 0x3
 387 005e 04       		.byte	0x4
 388 005f 05       		.byte	0x5
 389 0060 696E7400 		.ascii	"int\000"
 390 0064 02       		.uleb128 0x2
 391 0065 04       		.byte	0x4
 392 0066 07       		.byte	0x7
 393 0067 5A010000 		.4byte	.LASF8
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 17


 394 006b 04       		.uleb128 0x4
 395 006c DC000000 		.4byte	.LASF12
 396 0070 02       		.byte	0x2
 397 0071 C2       		.byte	0xc2
 398 0072 2C000000 		.4byte	0x2c
 399 0076 02       		.uleb128 0x2
 400 0077 04       		.byte	0x4
 401 0078 04       		.byte	0x4
 402 0079 AC000000 		.4byte	.LASF9
 403 007d 02       		.uleb128 0x2
 404 007e 08       		.byte	0x8
 405 007f 04       		.byte	0x4
 406 0080 F4000000 		.4byte	.LASF10
 407 0084 02       		.uleb128 0x2
 408 0085 01       		.byte	0x1
 409 0086 08       		.byte	0x8
 410 0087 2A020000 		.4byte	.LASF11
 411 008b 05       		.uleb128 0x5
 412 008c C5000000 		.4byte	.LASF13
 413 0090 02       		.byte	0x2
 414 0091 6C01     		.2byte	0x16c
 415 0093 97000000 		.4byte	0x97
 416 0097 06       		.uleb128 0x6
 417 0098 6B000000 		.4byte	0x6b
 418 009c 02       		.uleb128 0x2
 419 009d 04       		.byte	0x4
 420 009e 07       		.byte	0x7
 421 009f 13020000 		.4byte	.LASF14
 422 00a3 07       		.uleb128 0x7
 423 00a4 31010000 		.4byte	.LASF28
 424 00a8 01       		.byte	0x1
 425 00a9 2E       		.byte	0x2e
 426 00aa 00000000 		.4byte	.LFB0
 427 00ae F4010000 		.4byte	.LFE0-.LFB0
 428 00b2 01       		.uleb128 0x1
 429 00b3 9C       		.byte	0x9c
 430 00b4 E6000000 		.4byte	0xe6
 431 00b8 08       		.uleb128 0x8
 432 00b9 B2000000 		.4byte	.LASF15
 433 00bd 01       		.byte	0x1
 434 00be 31       		.byte	0x31
 435 00bf 6B000000 		.4byte	0x6b
 436 00c3 00000000 		.4byte	.LLST0
 437 00c7 08       		.uleb128 0x8
 438 00c8 00000000 		.4byte	.LASF16
 439 00cc 01       		.byte	0x1
 440 00cd 34       		.byte	0x34
 441 00ce 6B000000 		.4byte	0x6b
 442 00d2 13000000 		.4byte	.LLST1
 443 00d6 09       		.uleb128 0x9
 444 00d7 BC010000 		.4byte	.LVL13
 445 00db 44010000 		.4byte	0x144
 446 00df 0A       		.uleb128 0xa
 447 00e0 01       		.uleb128 0x1
 448 00e1 50       		.byte	0x50
 449 00e2 01       		.uleb128 0x1
 450 00e3 30       		.byte	0x30
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 18


 451 00e4 00       		.byte	0
 452 00e5 00       		.byte	0
 453 00e6 0B       		.uleb128 0xb
 454 00e7 4E010000 		.4byte	.LASF17
 455 00eb 03       		.byte	0x3
 456 00ec 23       		.byte	0x23
 457 00ed 97000000 		.4byte	0x97
 458 00f1 0B       		.uleb128 0xb
 459 00f2 70000000 		.4byte	.LASF18
 460 00f6 03       		.byte	0x3
 461 00f7 38       		.byte	0x38
 462 00f8 97000000 		.4byte	0x97
 463 00fc 0B       		.uleb128 0xb
 464 00fd 9B000000 		.4byte	.LASF19
 465 0101 03       		.byte	0x3
 466 0102 3B       		.byte	0x3b
 467 0103 07010000 		.4byte	0x107
 468 0107 0C       		.uleb128 0xc
 469 0108 04       		.byte	0x4
 470 0109 97000000 		.4byte	0x97
 471 010d 0B       		.uleb128 0xb
 472 010e 5E000000 		.4byte	.LASF20
 473 0112 03       		.byte	0x3
 474 0113 3C       		.byte	0x3c
 475 0114 97000000 		.4byte	0x97
 476 0118 0B       		.uleb128 0xb
 477 0119 39020000 		.4byte	.LASF21
 478 011d 03       		.byte	0x3
 479 011e 3D       		.byte	0x3d
 480 011f 97000000 		.4byte	0x97
 481 0123 0B       		.uleb128 0xb
 482 0124 FB000000 		.4byte	.LASF22
 483 0128 03       		.byte	0x3
 484 0129 40       		.byte	0x40
 485 012a 07010000 		.4byte	0x107
 486 012e 0B       		.uleb128 0xb
 487 012f E2000000 		.4byte	.LASF23
 488 0133 03       		.byte	0x3
 489 0134 41       		.byte	0x41
 490 0135 97000000 		.4byte	0x97
 491 0139 0B       		.uleb128 0xb
 492 013a 3B010000 		.4byte	.LASF24
 493 013e 03       		.byte	0x3
 494 013f 42       		.byte	0x42
 495 0140 97000000 		.4byte	0x97
 496 0144 0D       		.uleb128 0xd
 497 0145 0C020000 		.4byte	.LASF29
 498 0149 04       		.byte	0x4
 499 014a 80       		.byte	0x80
 500 014b 0E       		.uleb128 0xe
 501 014c 6B000000 		.4byte	0x6b
 502 0150 00       		.byte	0
 503 0151 00       		.byte	0
 504              		.section	.debug_abbrev,"",%progbits
 505              	.Ldebug_abbrev0:
 506 0000 01       		.uleb128 0x1
 507 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 19


 508 0002 01       		.byte	0x1
 509 0003 25       		.uleb128 0x25
 510 0004 0E       		.uleb128 0xe
 511 0005 13       		.uleb128 0x13
 512 0006 0B       		.uleb128 0xb
 513 0007 03       		.uleb128 0x3
 514 0008 0E       		.uleb128 0xe
 515 0009 1B       		.uleb128 0x1b
 516 000a 0E       		.uleb128 0xe
 517 000b 55       		.uleb128 0x55
 518 000c 17       		.uleb128 0x17
 519 000d 11       		.uleb128 0x11
 520 000e 01       		.uleb128 0x1
 521 000f 10       		.uleb128 0x10
 522 0010 17       		.uleb128 0x17
 523 0011 00       		.byte	0
 524 0012 00       		.byte	0
 525 0013 02       		.uleb128 0x2
 526 0014 24       		.uleb128 0x24
 527 0015 00       		.byte	0
 528 0016 0B       		.uleb128 0xb
 529 0017 0B       		.uleb128 0xb
 530 0018 3E       		.uleb128 0x3e
 531 0019 0B       		.uleb128 0xb
 532 001a 03       		.uleb128 0x3
 533 001b 0E       		.uleb128 0xe
 534 001c 00       		.byte	0
 535 001d 00       		.byte	0
 536 001e 03       		.uleb128 0x3
 537 001f 24       		.uleb128 0x24
 538 0020 00       		.byte	0
 539 0021 0B       		.uleb128 0xb
 540 0022 0B       		.uleb128 0xb
 541 0023 3E       		.uleb128 0x3e
 542 0024 0B       		.uleb128 0xb
 543 0025 03       		.uleb128 0x3
 544 0026 08       		.uleb128 0x8
 545 0027 00       		.byte	0
 546 0028 00       		.byte	0
 547 0029 04       		.uleb128 0x4
 548 002a 16       		.uleb128 0x16
 549 002b 00       		.byte	0
 550 002c 03       		.uleb128 0x3
 551 002d 0E       		.uleb128 0xe
 552 002e 3A       		.uleb128 0x3a
 553 002f 0B       		.uleb128 0xb
 554 0030 3B       		.uleb128 0x3b
 555 0031 0B       		.uleb128 0xb
 556 0032 49       		.uleb128 0x49
 557 0033 13       		.uleb128 0x13
 558 0034 00       		.byte	0
 559 0035 00       		.byte	0
 560 0036 05       		.uleb128 0x5
 561 0037 16       		.uleb128 0x16
 562 0038 00       		.byte	0
 563 0039 03       		.uleb128 0x3
 564 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 20


 565 003b 3A       		.uleb128 0x3a
 566 003c 0B       		.uleb128 0xb
 567 003d 3B       		.uleb128 0x3b
 568 003e 05       		.uleb128 0x5
 569 003f 49       		.uleb128 0x49
 570 0040 13       		.uleb128 0x13
 571 0041 00       		.byte	0
 572 0042 00       		.byte	0
 573 0043 06       		.uleb128 0x6
 574 0044 35       		.uleb128 0x35
 575 0045 00       		.byte	0
 576 0046 49       		.uleb128 0x49
 577 0047 13       		.uleb128 0x13
 578 0048 00       		.byte	0
 579 0049 00       		.byte	0
 580 004a 07       		.uleb128 0x7
 581 004b 2E       		.uleb128 0x2e
 582 004c 01       		.byte	0x1
 583 004d 3F       		.uleb128 0x3f
 584 004e 19       		.uleb128 0x19
 585 004f 03       		.uleb128 0x3
 586 0050 0E       		.uleb128 0xe
 587 0051 3A       		.uleb128 0x3a
 588 0052 0B       		.uleb128 0xb
 589 0053 3B       		.uleb128 0x3b
 590 0054 0B       		.uleb128 0xb
 591 0055 27       		.uleb128 0x27
 592 0056 19       		.uleb128 0x19
 593 0057 11       		.uleb128 0x11
 594 0058 01       		.uleb128 0x1
 595 0059 12       		.uleb128 0x12
 596 005a 06       		.uleb128 0x6
 597 005b 40       		.uleb128 0x40
 598 005c 18       		.uleb128 0x18
 599 005d 9742     		.uleb128 0x2117
 600 005f 19       		.uleb128 0x19
 601 0060 01       		.uleb128 0x1
 602 0061 13       		.uleb128 0x13
 603 0062 00       		.byte	0
 604 0063 00       		.byte	0
 605 0064 08       		.uleb128 0x8
 606 0065 34       		.uleb128 0x34
 607 0066 00       		.byte	0
 608 0067 03       		.uleb128 0x3
 609 0068 0E       		.uleb128 0xe
 610 0069 3A       		.uleb128 0x3a
 611 006a 0B       		.uleb128 0xb
 612 006b 3B       		.uleb128 0x3b
 613 006c 0B       		.uleb128 0xb
 614 006d 49       		.uleb128 0x49
 615 006e 13       		.uleb128 0x13
 616 006f 02       		.uleb128 0x2
 617 0070 17       		.uleb128 0x17
 618 0071 00       		.byte	0
 619 0072 00       		.byte	0
 620 0073 09       		.uleb128 0x9
 621 0074 898201   		.uleb128 0x4109
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 21


 622 0077 01       		.byte	0x1
 623 0078 11       		.uleb128 0x11
 624 0079 01       		.uleb128 0x1
 625 007a 31       		.uleb128 0x31
 626 007b 13       		.uleb128 0x13
 627 007c 00       		.byte	0
 628 007d 00       		.byte	0
 629 007e 0A       		.uleb128 0xa
 630 007f 8A8201   		.uleb128 0x410a
 631 0082 00       		.byte	0
 632 0083 02       		.uleb128 0x2
 633 0084 18       		.uleb128 0x18
 634 0085 9142     		.uleb128 0x2111
 635 0087 18       		.uleb128 0x18
 636 0088 00       		.byte	0
 637 0089 00       		.byte	0
 638 008a 0B       		.uleb128 0xb
 639 008b 34       		.uleb128 0x34
 640 008c 00       		.byte	0
 641 008d 03       		.uleb128 0x3
 642 008e 0E       		.uleb128 0xe
 643 008f 3A       		.uleb128 0x3a
 644 0090 0B       		.uleb128 0xb
 645 0091 3B       		.uleb128 0x3b
 646 0092 0B       		.uleb128 0xb
 647 0093 49       		.uleb128 0x49
 648 0094 13       		.uleb128 0x13
 649 0095 3F       		.uleb128 0x3f
 650 0096 19       		.uleb128 0x19
 651 0097 3C       		.uleb128 0x3c
 652 0098 19       		.uleb128 0x19
 653 0099 00       		.byte	0
 654 009a 00       		.byte	0
 655 009b 0C       		.uleb128 0xc
 656 009c 0F       		.uleb128 0xf
 657 009d 00       		.byte	0
 658 009e 0B       		.uleb128 0xb
 659 009f 0B       		.uleb128 0xb
 660 00a0 49       		.uleb128 0x49
 661 00a1 13       		.uleb128 0x13
 662 00a2 00       		.byte	0
 663 00a3 00       		.byte	0
 664 00a4 0D       		.uleb128 0xd
 665 00a5 2E       		.uleb128 0x2e
 666 00a6 01       		.byte	0x1
 667 00a7 3F       		.uleb128 0x3f
 668 00a8 19       		.uleb128 0x19
 669 00a9 03       		.uleb128 0x3
 670 00aa 0E       		.uleb128 0xe
 671 00ab 3A       		.uleb128 0x3a
 672 00ac 0B       		.uleb128 0xb
 673 00ad 3B       		.uleb128 0x3b
 674 00ae 0B       		.uleb128 0xb
 675 00af 27       		.uleb128 0x27
 676 00b0 19       		.uleb128 0x19
 677 00b1 3C       		.uleb128 0x3c
 678 00b2 19       		.uleb128 0x19
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 22


 679 00b3 00       		.byte	0
 680 00b4 00       		.byte	0
 681 00b5 0E       		.uleb128 0xe
 682 00b6 05       		.uleb128 0x5
 683 00b7 00       		.byte	0
 684 00b8 49       		.uleb128 0x49
 685 00b9 13       		.uleb128 0x13
 686 00ba 00       		.byte	0
 687 00bb 00       		.byte	0
 688 00bc 00       		.byte	0
 689              		.section	.debug_loc,"",%progbits
 690              	.Ldebug_loc0:
 691              	.LLST0:
 692 0000 0A010000 		.4byte	.LVL6
 693 0004 26010000 		.4byte	.LVL7
 694 0008 0100     		.2byte	0x1
 695 000a 51       		.byte	0x51
 696 000b 00000000 		.4byte	0
 697 000f 00000000 		.4byte	0
 698              	.LLST1:
 699 0013 08000000 		.4byte	.LVL0
 700 0017 78000000 		.4byte	.LVL1
 701 001b 0100     		.2byte	0x1
 702 001d 52       		.byte	0x52
 703 001e CA000000 		.4byte	.LVL2
 704 0022 CC000000 		.4byte	.LVL3
 705 0026 0100     		.2byte	0x1
 706 0028 52       		.byte	0x52
 707 0029 EC000000 		.4byte	.LVL4
 708 002d FC000000 		.4byte	.LVL5
 709 0031 0100     		.2byte	0x1
 710 0033 52       		.byte	0x52
 711 0034 38010000 		.4byte	.LVL8
 712 0038 4E010000 		.4byte	.LVL9
 713 003c 0100     		.2byte	0x1
 714 003e 52       		.byte	0x52
 715 003f 90010000 		.4byte	.LVL10
 716 0043 92010000 		.4byte	.LVL11
 717 0047 0100     		.2byte	0x1
 718 0049 52       		.byte	0x52
 719 004a B6010000 		.4byte	.LVL12
 720 004e BB010000 		.4byte	.LVL13-1
 721 0052 0100     		.2byte	0x1
 722 0054 52       		.byte	0x52
 723 0055 BE010000 		.4byte	.LVL14
 724 0059 C0010000 		.4byte	.LVL15
 725 005d 0100     		.2byte	0x1
 726 005f 52       		.byte	0x52
 727 0060 00000000 		.4byte	0
 728 0064 00000000 		.4byte	0
 729              		.section	.debug_aranges,"",%progbits
 730 0000 1C000000 		.4byte	0x1c
 731 0004 0200     		.2byte	0x2
 732 0006 00000000 		.4byte	.Ldebug_info0
 733 000a 04       		.byte	0x4
 734 000b 00       		.byte	0
 735 000c 0000     		.2byte	0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 23


 736 000e 0000     		.2byte	0
 737 0010 00000000 		.4byte	.LFB0
 738 0014 F4010000 		.4byte	.LFE0-.LFB0
 739 0018 00000000 		.4byte	0
 740 001c 00000000 		.4byte	0
 741              		.section	.debug_ranges,"",%progbits
 742              	.Ldebug_ranges0:
 743 0000 00000000 		.4byte	.LFB0
 744 0004 F4010000 		.4byte	.LFE0
 745 0008 00000000 		.4byte	0
 746 000c 00000000 		.4byte	0
 747              		.section	.debug_line,"",%progbits
 748              	.Ldebug_line0:
 749 0000 C6000000 		.section	.debug_str,"MS",%progbits,1
 749      02006200 
 749      00000201 
 749      FB0E0D00 
 749      01010101 
 750              	.LASF16:
 751 0000 746D7043 		.ascii	"tmpCsr\000"
 751      737200
 752              	.LASF27:
 753 0007 433A5C55 		.ascii	"C:\\Users\\DGilliland\\Documents\\GitHub\\lb-boards"
 753      73657273 
 753      5C444769 
 753      6C6C696C 
 753      616E645C 
 754 0035 5C525050 		.ascii	"\\RPPSOC\\PSOC-SPI\\PSOC-SPI\\PSOC-SPI.cydsn\000"
 754      534F435C 
 754      50534F43 
 754      2D535049 
 754      5C50534F 
 755              	.LASF20:
 756 005e 4932435F 		.ascii	"I2C_1_slRdBufSize\000"
 756      315F736C 
 756      52644275 
 756      6653697A 
 756      6500
 757              	.LASF18:
 758 0070 4932435F 		.ascii	"I2C_1_slStatus\000"
 758      315F736C 
 758      53746174 
 758      757300
 759              	.LASF4:
 760 007f 6C6F6E67 		.ascii	"long int\000"
 760      20696E74 
 760      00
 761              	.LASF3:
 762 0088 73686F72 		.ascii	"short unsigned int\000"
 762      7420756E 
 762      7369676E 
 762      65642069 
 762      6E7400
 763              	.LASF19:
 764 009b 4932435F 		.ascii	"I2C_1_slRdBufPtr\000"
 764      315F736C 
 764      52644275 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 24


 764      66507472 
 764      00
 765              	.LASF9:
 766 00ac 666C6F61 		.ascii	"float\000"
 766      7400
 767              	.LASF15:
 768 00b2 746D7038 		.ascii	"tmp8\000"
 768      00
 769              	.LASF1:
 770 00b7 756E7369 		.ascii	"unsigned char\000"
 770      676E6564 
 770      20636861 
 770      7200
 771              	.LASF13:
 772 00c5 72656738 		.ascii	"reg8\000"
 772      00
 773              	.LASF5:
 774 00ca 6C6F6E67 		.ascii	"long unsigned int\000"
 774      20756E73 
 774      69676E65 
 774      6420696E 
 774      7400
 775              	.LASF12:
 776 00dc 75696E74 		.ascii	"uint8\000"
 776      3800
 777              	.LASF23:
 778 00e2 4932435F 		.ascii	"I2C_1_slWrBufSize\000"
 778      315F736C 
 778      57724275 
 778      6653697A 
 778      6500
 779              	.LASF10:
 780 00f4 646F7562 		.ascii	"double\000"
 780      6C6500
 781              	.LASF22:
 782 00fb 4932435F 		.ascii	"I2C_1_slWrBufPtr\000"
 782      315F736C 
 782      57724275 
 782      66507472 
 782      00
 783              	.LASF26:
 784 010c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\I2C_1_INT.c\000"
 784      6E657261 
 784      7465645F 
 784      536F7572 
 784      63655C50 
 785              	.LASF28:
 786 0131 4932435F 		.ascii	"I2C_1_ISR\000"
 786      315F4953 
 786      5200
 787              	.LASF24:
 788 013b 4932435F 		.ascii	"I2C_1_slWrBufIndex\000"
 788      315F736C 
 788      57724275 
 788      66496E64 
 788      657800
 789              	.LASF17:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 25


 790 014e 4932435F 		.ascii	"I2C_1_state\000"
 790      315F7374 
 790      61746500 
 791              	.LASF8:
 792 015a 756E7369 		.ascii	"unsigned int\000"
 792      676E6564 
 792      20696E74 
 792      00
 793              	.LASF7:
 794 0167 6C6F6E67 		.ascii	"long long unsigned int\000"
 794      206C6F6E 
 794      6720756E 
 794      7369676E 
 794      65642069 
 795              	.LASF25:
 796 017e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 796      4320342E 
 796      392E3320 
 796      32303135 
 796      30333033 
 797 01b1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 797      20726576 
 797      6973696F 
 797      6E203232 
 797      31323230 
 798 01e4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 798      66756E63 
 798      74696F6E 
 798      2D736563 
 798      74696F6E 
 799              	.LASF29:
 800 020c 43794861 		.ascii	"CyHalt\000"
 800      6C7400
 801              	.LASF14:
 802 0213 73697A65 		.ascii	"sizetype\000"
 802      74797065 
 802      00
 803              	.LASF6:
 804 021c 6C6F6E67 		.ascii	"long long int\000"
 804      206C6F6E 
 804      6720696E 
 804      7400
 805              	.LASF11:
 806 022a 63686172 		.ascii	"char\000"
 806      00
 807              	.LASF2:
 808 022f 73686F72 		.ascii	"short int\000"
 808      7420696E 
 808      7400
 809              	.LASF21:
 810 0239 4932435F 		.ascii	"I2C_1_slRdBufIndex\000"
 810      315F736C 
 810      52644275 
 810      66496E64 
 810      657800
 811              	.LASF0:
 812 024c 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccOj46Sj.s 			page 26


 812      65642063 
 812      68617200 
 813              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
